{"version":3,"sources":["theme.js","actions/types.js","actions/repo-actions.js","constants.js","screens/Home/styles.js","components/NavBar/styles.js","components/NavBar/NavBar.jsx","components/SearchBar/styles.js","components/SearchBar/SearchBar.jsx","screens/Home/Home.jsx","screens/Home/provider.js","screens/Repos/styles.js","components/RepoCard/styles.js","components/RepoCard/RepoCard.jsx","screens/Repos/Repos.jsx","screens/Repos/provider.js","App.js","reducers/ui-reducer.js","reducers/data-reducer.js","reducers/index.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","teal","secondary","pink","REPO_ACTIONS","changeColorTheme","colorTheme","type","getUserRepositories","username","dispatch","fetchUserRepositories","axios","get","then","response","repositories","data","catch","error","fetchUserRepositoriesError","COLOR_THEME","useStyles","makeStyles","grid","props","background","minHeight","text","textAlign","color","paper","red","paddingTop","spacing","appBar","grey","dark","root","flexGrow","menuButton","marginRight","link","fontSize","textDecoration","divider","height","margin","NavBar","classes","useState","darkTheme","state","setState","className","AppBar","position","Toolbar","IconButton","edge","aria-label","to","FormControlLabel","control","Switch","checked","onChange","event","target","value","label","Divider","orientation","mx","searchBar","padding","display","alignItems","width","marginTop","form","justifyContent","searchIcon","textInput","marginLeft","flex","button","contrastText","SearchBar","handleReposSearch","setUsername","Paper","onSubmit","e","InputBase","placeholder","inputProps","Button","variant","Home","history","inputError","setinputError","Grid","CssBaseline","Box","py","Typography","Container","maxWidth","preventDefault","push","connect","ui","repos","flexWrap","paddingBottom","box","avatar","progressContainer","top","left","transform","zIndex","progress","repoCard","flexDirection","cardActions","starIcon","verticalAlign","RepoCard","name","description","stars","isOwner","Card","CardContent","component","gutterBottom","mr","mt","CardActions","href","size","Repos","avatarUrl","isFetching","errorMessage","CircularProgress","Avatar","alt","src","length","map","repo","key","id","html_url","stargazers_count","owner","login","toLowerCase","userAvatar","App","ThemeProvider","exact","path","uiState","uiReducer","action","message","appData","dataReducer","ownedRepo","find","avatar_url","sort","a","b","filter","index","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e214b41.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { teal, pink } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: teal[500] },\r\n    secondary: { main: pink[500] },\r\n  },\r\n});\r\n","export const REPO_ACTIONS = {\r\n  FETCH_USER_REPOSITORIES: 'fetchUserRepositories',\r\n  FETCH_USER_REPOSITORIES_SUCCESS: 'fetchUserRepositoriesSuccess',\r\n  FETCH_USER_REPOSITORIES_ERROR: 'fetchUserRepositoriesError'\r\n};\r\n\r\nexport const CHANGE_COLOR_THEME = 'changeColorTheme';\r\n\r\nexport const fetchUserRepositories = (username) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES,\r\n    username\r\n  };\r\n};\r\n\r\nexport const fetchUserRepositoriesSuccess = (repositories) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS,\r\n    repositories\r\n  };\r\n};\r\n\r\nexport const fetchUserRepositoriesError = (error) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES_ERROR,\r\n    error\r\n  };\r\n};\r\n\r\nexport const changeColorTheme = (colorTheme) => {\r\n  return {\r\n    type: CHANGE_COLOR_THEME,\r\n    colorTheme\r\n  };\r\n};","import axios from 'axios';\r\nimport {\r\n  fetchUserRepositories,\r\n  fetchUserRepositoriesSuccess,\r\n  fetchUserRepositoriesError\r\n} from './types';\r\n\r\nexport const getUserRepositories = (username) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRepositories(username));\r\n    axios.get(`https://api.github.com/users/${username}/repos?type=all`)\r\n      .then(response => dispatch(fetchUserRepositoriesSuccess(response.data)))\r\n      .catch(error => dispatch(fetchUserRepositoriesError(error)))\r\n  };\r\n};\r\n","export const COLOR_THEME = {\r\n  DARK: 'dark',\r\n  LIGHT: 'light'\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { COLOR_THEME } from './../../constants';\r\n\r\nconst darkGradient = 'linear-gradient(to right, #000000, #434343)';\r\nconst lightGradient = 'linear-gradient(to top, #ada996, #f2f2f2, #dbdbdb, #eaeaea)';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  grid: props => ({\r\n    background: props.colorTheme === COLOR_THEME.DARK ?  darkGradient : lightGradient,\r\n    minHeight: '100vh'\r\n  }),\r\n  text: props => ({\r\n    textAlign: 'center',\r\n    color: props.colorTheme === COLOR_THEME.DARK ? \r\n      theme.palette.background.paper : theme.palette.text.primary\r\n  }),\r\n  error: {\r\n    color: red[500],\r\n    paddingTop: theme.spacing(1)\r\n  }\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR_THEME } from './../../constants';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  appBar: props => ({\r\n    background: props.colorTheme === COLOR_THEME.DARK ? theme.palette.grey[900] : theme.palette.primary.dark\r\n  }),\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  link: {\r\n    fontSize: '1.1rem',\r\n    color: theme.palette.background.paper,\r\n    textDecoration: 'none',\r\n    flexGrow: 1\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: theme.spacing(0, 2),\r\n    background: theme.palette.background.paper\r\n  }\r\n}));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './styles';\r\nimport { COLOR_THEME } from './../../constants';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  FormControlLabel,\r\n  Switch,\r\n  Divider,\r\n} from '@material-ui/core';\r\n\r\nconst NavBar = ({ colorTheme, changeColorTheme }) => {\r\n  const classes = useStyles({ colorTheme });\r\n  const [state, setState] = useState({\r\n    darkTheme: false\r\n  });\r\n\r\n  const handleToogleChange = event => {\r\n    const colorTheme = event.target.checked ? COLOR_THEME.DARK : COLOR_THEME.LIGHT;\r\n    setState({ ...state, darkTheme: event.target.checked });\r\n    changeColorTheme(colorTheme);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n          >\r\n            <i className='material-icons'>menu</i>\r\n          </IconButton>\r\n          <Link to='/' className={classes.link}>\r\n            GitHub Repos\r\n          </Link>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={state.darkTheme}\r\n                onChange={handleToogleChange}\r\n                value='darkTheme'\r\n                color='default'\r\n              />\r\n            }\r\n            label='Toggle Theme'\r\n          />\r\n          <Divider className={classes.divider} orientation='vertical' />\r\n          <IconButton edge='start' color='inherit' aria-label='menu' mx={2}>\r\n            <i className='material-icons'>notifications</i>\r\n          </IconButton>\r\n          <IconButton edge='start' color='inherit' aria-label='menu' mx={2}>\r\n            <i className='material-icons'>account_circle</i>\r\n          </IconButton>\r\n          <IconButton edge='start' color='inherit' aria-label='menu' mx={2}>\r\n            <i className='material-icons'>help</i>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  colorTheme: PropTypes.oneOf([COLOR_THEME.DARK, COLOR_THEME.LIGHT]),\r\n  changeColorTheme: PropTypes.func\r\n};\r\n\r\nexport default NavBar;","import { makeStyles } from '@material-ui/core/styles';\r\nimport { teal, pink } from '@material-ui/core/colors';\r\nimport { COLOR_THEME } from './../../constants';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  searchBar: {\r\n    padding: theme.spacing(0.5),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '100%'\r\n  },\r\n  searchIcon: {\r\n    margin: theme.spacing(0, 1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  textInput: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  button: props => ({\r\n    padding: theme.spacing(1.5, 5),\r\n    background: props.colorTheme === COLOR_THEME.DARK ? pink[500] : teal[500],\r\n    color: theme.palette.primary.contrastText,\r\n    '&:hover': {\r\n      background: props.colorTheme === COLOR_THEME.DARK ? pink[700] : teal[700]\r\n    }\r\n  })\r\n}));\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useStyles } from './styles';\r\nimport { COLOR_THEME } from './../../constants';\r\nimport {\r\n  Paper,\r\n  InputBase,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst SearchBar = ({ handleReposSearch, colorTheme }) => {\r\n  const classes = useStyles({ colorTheme });\r\n  const [username, setUsername] = useState('');\r\n\r\n  return (\r\n    <Paper className={classes.searchBar}>\r\n      <i className={`material-icons ${classes.searchIcon}`}>search</i>\r\n      <form className={classes.form} onSubmit={(e) => handleReposSearch(e, username)}>\r\n        <InputBase\r\n          className={classes.textInput}\r\n          placeholder='Username'\r\n          inputProps={{ 'aria-label': 'search github' }}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <Button type='submit' variant='contained' className={classes.button} >\r\n          Search\r\n      </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  handleReposSearch: PropTypes.func,\r\n  colorTheme: PropTypes.oneOf([COLOR_THEME.DARK, COLOR_THEME.LIGHT]),\r\n};\r\n\r\nexport default SearchBar;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useStyles } from './styles';\r\nimport { COLOR_THEME } from './../../constants';\r\nimport {\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\n\r\nconst Home = ({\r\n  getUserRepositories,\r\n  changeColorTheme,\r\n  colorTheme,\r\n  history\r\n}) => {\r\n  const classes = useStyles({ colorTheme });\r\n  const [inputError, setinputError] = useState('');\r\n\r\n  const handleSearchRepos = (e, username) => {\r\n    e.preventDefault();\r\n    if (!username) {\r\n      setinputError('Please type a username and then hit search');\r\n      return;\r\n    }\r\n    getUserRepositories(username);\r\n    history.push(`/repos/${username}`);\r\n  }\r\n\r\n  return (\r\n    <Grid className={classes.grid}>\r\n      <NavBar changeColorTheme={changeColorTheme} colorTheme={colorTheme} />\r\n      <CssBaseline />\r\n      <Box py={6}>\r\n        <Typography variant='h1' className={classes.text}>\r\n          GitHub Repos\r\n        </Typography>\r\n      </Box>\r\n      <Container maxWidth='sm'>\r\n        <Typography variant='subtitle1' className={classes.text}>\r\n          Type a GitHub username and we'll show you a\r\n          list of repositories this user owns or contribute to with the most stars.\r\n        </Typography>\r\n        <SearchBar\r\n          handleReposSearch={handleSearchRepos}\r\n          colorTheme={colorTheme}\r\n        />\r\n        {\r\n          inputError &&\r\n          <Typography variant='subtitle2' className={classes.error}>\r\n            {inputError}\r\n          </Typography>\r\n        }\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  getUserRepositories: PropTypes.func,\r\n  changeColorTheme: PropTypes.func,\r\n  colorTheme: PropTypes.oneOf([COLOR_THEME.DARK, COLOR_THEME.LIGHT]),\r\n  history: PropTypes.shape()\r\n};\r\n\r\nexport default Home;","import { connect } from 'react-redux';\r\nimport { getUserRepositories } from '../../actions/repo-actions';\r\nimport { changeColorTheme } from '../../actions/types';\r\n\r\nimport Home from './Home';\r\n\r\nconst state2Props = (state) => {\r\n  return {\r\n    colorTheme: state.ui.colorTheme\r\n  };\r\n};\r\n\r\nconst dispatch2Props = (dispatch) => {\r\n  return {\r\n    getUserRepositories: (username) => {\r\n      dispatch(getUserRepositories(username));\r\n    },\r\n    changeColorTheme: (colorTheme) => {\r\n      dispatch(changeColorTheme(colorTheme));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state2Props, dispatch2Props)(Home);","import { makeStyles } from '@material-ui/core/styles';\r\nimport { teal, pink, red } from '@material-ui/core/colors';\r\nimport { COLOR_THEME } from './../../constants';\r\n\r\nconst darkGradient = 'linear-gradient(to right, #000000, #434343)';\r\nconst lightGradient = 'linear-gradient(to top, #ada996, #f2f2f2, #dbdbdb, #eaeaea)';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  repos: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  grid: props => ({\r\n    background: props.colorTheme === COLOR_THEME.DARK ? darkGradient : lightGradient,\r\n    minHeight: '100vh'\r\n  }),\r\n  text: props => ({\r\n    textAlign: 'center',\r\n    color: props.colorTheme === COLOR_THEME.DARK ? theme.palette.background.paper : theme.palette.text.primary\r\n  }),\r\n  progressContainer: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: 20,\r\n  },\r\n  progress: props => ({\r\n    color:  props.colorTheme === COLOR_THEME.DARK ? pink[700] : teal[700]\r\n  }),\r\n  button: props => ({\r\n    margin: '2rem auto',\r\n    padding: theme.spacing(1, 3),\r\n    background: props.colorTheme === COLOR_THEME.DARK ? pink[500] : teal[400],\r\n    color: theme.palette.primary.contrastText,\r\n    '&:hover': {\r\n      background: props.colorTheme === COLOR_THEME.DARK ? pink[700] : teal[600]\r\n    }\r\n  }),\r\n  error: {\r\n    color: red[500],\r\n    textAlign: 'center'\r\n  },\r\n  link: {\r\n    color: theme.palette.background.paper,\r\n    textDecoration: 'none'\r\n  }\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  repoCard: {\r\n    width: 350,\r\n    margin: theme.spacing(2, 0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  starIcon: {\r\n    verticalAlign: 'bottom',\r\n    color: 'yellow[500]'\r\n  },\r\n  text: {\r\n    fontSize: 14\r\n  }\r\n}));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { useStyles } from './styles';\r\n\r\nconst RepoCard = ({\r\n  name,\r\n  description,\r\n  link,\r\n  stars,\r\n  isOwner\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.repoCard}>\r\n      <CardContent>\r\n        <Typography variant='h5' component='h2' gutterBottom>\r\n          {name}\r\n        </Typography>\r\n        <Typography variant='subtitle2' component='span' mr={1}>\r\n          {isOwner ? 'Owner' : 'Member'}\r\n        </Typography>\r\n        <Typography variant='body2' component='p' color='textSecondary' mt={1}>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button href={link} size='small' variant='outlined'>View Repository</Button>\r\n        <Box component='span'>\r\n          <i className={`material-icons ${classes.starIcon}`}>star</i>\r\n          <Typography component='span' className={classes.text}>\r\n            {stars}\r\n          </Typography>\r\n        </Box>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nRepoCard.propTypes = {\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  link: PropTypes.string,\r\n  stars: PropTypes.number,\r\n  isOwner: PropTypes.bool\r\n};\r\n\r\nexport default RepoCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './styles';\r\nimport { COLOR_THEME } from './../../constants';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  CssBaseline,\r\n  Grid,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport NavBar from './../../components/NavBar';\r\nimport RepoCard from './../../components/RepoCard';\r\n\r\nconst Repos = ({\r\n  changeColorTheme,\r\n  colorTheme,\r\n  avatarUrl,\r\n  username,\r\n  repositories,\r\n  isFetching,\r\n  errorMessage\r\n}) => {\r\n  const classes = useStyles({ colorTheme });\r\n  return (\r\n    <Grid className={classes.grid}>\r\n      <NavBar changeColorTheme={changeColorTheme} colorTheme={colorTheme} />\r\n      <CssBaseline />\r\n      <Box py={2} className={classes.box}>\r\n        {\r\n          isFetching && (\r\n            <div className={classes.progressContainer}>\r\n              <CircularProgress className={classes.progress} />\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          avatarUrl &&\r\n          <Avatar alt={username} src={avatarUrl} className={classes.avatar} />\r\n        }\r\n        {\r\n          username && (\r\n            <Typography variant='h5' className={classes.text}>\r\n              {username} repositories\r\n          </Typography>\r\n          )\r\n        }\r\n      </Box>\r\n      {\r\n        errorMessage && (\r\n          <Typography variant='h5' className={classes.error}>\r\n            {errorMessage}\r\n          </Typography>\r\n        )\r\n      }\r\n      {\r\n        !repositories.length && !isFetching && !errorMessage && (\r\n          <Typography variant='h2' className={classes.text}>\r\n            There is nothing here.\r\n          </Typography>\r\n        )\r\n      }\r\n      <Box className={classes.box}>\r\n        <Button variant='contained' className={classes.button} >\r\n          <Link to='/' className={classes.link} >Search Again ?</Link>\r\n        </Button>\r\n      </Box>\r\n      <Container maxWidth='lg' className={classes.repos}>\r\n        {repositories.map(repo =>\r\n          <RepoCard\r\n            key={repo.id}\r\n            name={repo.name}\r\n            description={repo.description}\r\n            link={repo.html_url}\r\n            stars={repo.stargazers_count}\r\n            isOwner={username === repo.owner.login.toLowerCase()}\r\n          />)}\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nRepos.propTypes = {\r\n  changeColorTheme: PropTypes.func,\r\n  colorTheme: PropTypes.oneOf([COLOR_THEME.DARK, COLOR_THEME.LIGHT]),\r\n  avatarUrl: PropTypes.string,\r\n  username: PropTypes.string,\r\n  repositories: PropTypes.arrayOf(PropTypes.shape()),\r\n  isFetching: PropTypes.bool,\r\n  errorMessage: PropTypes.string\r\n};\r\n\r\nexport default Repos;\r\n","import { connect } from 'react-redux';\r\nimport { changeColorTheme } from '../../actions/types';\r\n\r\nimport Repos from './Repos';\r\n\r\nconst state2Props = (state) => {\r\n  return {\r\n    username: state.data.username,\r\n    avatarUrl: state.data.userAvatar,\r\n    repositories: state.data.repositories,\r\n    isFetching: state.ui.isFetching,\r\n    errorMessage: state.ui.errorMessage,\r\n    colorTheme: state.ui.colorTheme\r\n  };\r\n};\r\n\r\nconst dispatch2Props = (dispatch) => {\r\n  return {\r\n    changeColorTheme: (colorTheme) => {\r\n      dispatch(changeColorTheme(colorTheme));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state2Props, dispatch2Props)(Repos);","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { theme } from './theme';\r\n\r\nimport Home from './screens/Home/provider';\r\nimport Repos from './screens/Repos/provider';\r\n\r\nconst App = () => (\r\n  <HashRouter>\r\n    <ThemeProvider theme={theme}>\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/repos/:username' component={Repos} />\r\n    </ThemeProvider>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","import { REPO_ACTIONS, CHANGE_COLOR_THEME } from './../actions/types';\r\nimport { COLOR_THEME } from './../constants';\r\n\r\nconst uiState = {\r\n  isFetching: false,\r\n  errorMessage: '',\r\n  colorTheme: COLOR_THEME.LIGHT\r\n};\r\n\r\nconst uiReducer = (ui = uiState, action) => {\r\n  switch(action.type) {\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES:\r\n      return {\r\n        ...ui,\r\n        errorMessage: '',\r\n        isFetching: true\r\n      };\r\n\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS:\r\n      return {\r\n        ...ui,\r\n        errorMessage: '',\r\n        isFetching: false\r\n      };\r\n\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_ERROR:\r\n      return {\r\n        ...ui,\r\n        isFetching: false,\r\n        errorMessage: action.error.message\r\n      }\r\n\r\n    case CHANGE_COLOR_THEME:\r\n      return {\r\n        ...ui,\r\n        colorTheme: action.colorTheme\r\n      }\r\n\r\n    default:\r\n      return ui;\r\n  }\r\n}\r\n\r\nexport default uiReducer;","import { REPO_ACTIONS } from './../actions/types';\r\n\r\nconst appData = {\r\n  username: '',\r\n  userAvatar: '',\r\n  repositories: []\r\n};\r\n\r\nconst dataReducer = (data = appData, action) => {\r\n  switch (action.type) {\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES:\r\n      return {\r\n        username: action.username.toLowerCase(),\r\n        userAvatar: '',\r\n        repositories: []\r\n      };\r\n\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS:\r\n      let userAvatar = '';\r\n      const ownedRepo = action.repositories.length &&\r\n        action.repositories.find(repo => repo.owner.login.toLowerCase() === data.username);\r\n      if (ownedRepo) {\r\n        userAvatar = ownedRepo.owner.avatar_url;\r\n      }\r\n      return {\r\n        ...data,\r\n        repositories: action.repositories\r\n          .sort((a, b) => b.stargazers_count - a.stargazers_count)\r\n          .filter((repo, index) => index < 10),\r\n        userAvatar\r\n      };\r\n\r\n    default:\r\n      return data;\r\n  }\r\n}\r\n\r\nexport default dataReducer;","import { combineReducers } from 'redux';\r\nimport ui from './ui-reducer';\r\nimport data from './data-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  ui,\r\n  data\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}