{"version":3,"sources":["components/SearchBar.jsx","components/RepoCard.jsx","components/HomePage.jsx","actions/types.js","actions/repo-actions.js","components/provider.js","App.js","reducers/ui-reducer.js","reducers/data-reducer.js","reducers/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","alignItems","width","marginTop","form","justifyContent","input","marginLeft","spacing","flex","icon","margin","color","button","background","SearchBar","onSearchRepos","classes","useState","username","setUsername","Paper","className","onSubmit","e","preventDefault","InputBase","placeholder","inputProps","value","onChange","target","Button","type","variant","card","minWidth","flexDirection","title","fontSize","pos","marginBottom","RepoCard","name","description","link","stars","Card","CardContent","Typography","component","gutterBottom","style","CardActions","href","size","position","left","verticalAlign","top","minHeight","height","textAlign","repos","flexWrap","avatar","HomePage","getUserRepositories","repositories","length","owner","login","avatarUrl","avatar_url","Grid","CssBaseline","Box","py","Container","maxWidth","pt","Avatar","alt","src","map","repo","html_url","stargazers_count","REPO_ACTIONS","dispatch","fetchUserRepositories","fetch","then","response","json","catch","error","fetchUserRepositoriesError","connect","state","data","isFetching","ui","errorMessage","App","exact","path","uiState","uiReducer","action","message","dataReducer","console","log","sort","a","b","filter","index","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3f267b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, InputBase, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '2px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginTop: '1rem',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '100%'\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  icon: {\r\n    margin: '0 .5rem',\r\n    color: 'rgba(0, 0, 0, 0.52)'\r\n  },\r\n  button: {\r\n    padding: theme.spacing(1.5, 5),\r\n    background: '#f50057',\r\n    color: '#fff',\r\n    '&:hover': {\r\n      background: '#d60043'\r\n    }\r\n  }\r\n}));\r\n\r\nconst SearchBar = ({ onSearchRepos }) => {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState('');\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <i className={`material-icons ${classes.icon}`}>search</i>\r\n      <form className={classes.form} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onSearchRepos(username);\r\n      }}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder='Username'\r\n          inputProps={{ 'aria-label': 'search github' }}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <Button type='submit' variant='contained' className={classes.button} >\r\n          Search\r\n      </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n    width: 350,\r\n    margin: '1rem 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function RepoCard({\r\n  name,\r\n  description,\r\n  link,\r\n  stars\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\" style={{ marginTop: '1rem' }}>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button href={link} size=\"small\">View Repository</Button>\r\n        <div style={{ position: 'relative', left: '130px'}}>\r\n          <i className='material-icons' style={{ verticalAlign: 'middle', color: 'gold', position: 'relative', top: '-2px' }}>star</i>\r\n          <Typography variant=\"body2\" component=\"span\">\r\n         {stars}\r\n        </Typography>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport RepoCard from './RepoCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CssBaseline, Grid, Typography, Container, Box, Avatar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  'grid-light': {\r\n    background: 'linear-gradient(to top, #ada996, #f2f2f2, #dbdbdb, #eaeaea)',\r\n    minHeight: '100vh'\r\n  },\r\n  'grid-dark': {\r\n    background: 'linear-gradient(to right, #000000, #434343)',\r\n    height: '100vh'\r\n  },\r\n  'text-light': {\r\n    color: '#24292e',\r\n    textAlign: 'center'\r\n  },\r\n  'text-dark': {\r\n    color: '#fff',\r\n    textAlign: 'center'\r\n  },\r\n  repos: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n    marginTop: '2rem'\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60,\r\n  }\r\n}));\r\n\r\n// @TODO Add flag for member/owner\r\n// get avatar and username for the current user\r\n\r\nconst HomePage = ({ getUserRepositories, repositories }) => {\r\n  const classes = useStyles();\r\n  const theme = 'light';\r\n  const username = repositories.length ? repositories[0].owner.login : '';\r\n  const avatarUrl = repositories.length ? repositories[0].owner.avatar_url : '';\r\n  return (\r\n    <Grid className={classes[`grid-${theme}`]}>\r\n      <CssBaseline />\r\n      <Box py={4}>\r\n        <Typography variant='h1' className={classes[`text-${theme}`]}>\r\n          GitHub Repos\r\n        </Typography>\r\n      </Box>\r\n      <Container maxWidth='sm'>\r\n        <Typography variant='subtitle1' className={classes[`text-${theme}`]}>\r\n          Type a GitHub username and we'll show you a\r\n          list of repositories this user owns or contribute to with the most stars.\r\n        </Typography>\r\n        <SearchBar theme={theme} onSearchRepos={getUserRepositories} />\r\n      </Container>\r\n      <Box pt={6} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n        {avatarUrl && <Avatar alt={username} src={avatarUrl} className={classes.avatar} />}\r\n        {username && <Typography variant='h5' className={classes[`text-${theme}`]}>\r\n          {username} repositories\r\n            </Typography>\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Container maxWidth='lg' className={classes.repos}>\r\n        {repositories.map(repo =>\r\n          <RepoCard\r\n            name={repo.name}\r\n            description={repo.description}\r\n            link={repo.html_url}\r\n            stars={repo.stargazers_count}\r\n          />)}\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HomePage;","export const REPO_ACTIONS = {\r\n  FETCH_USER_REPOSITORIES: 'fetchUserRepositories',\r\n  FETCH_USER_REPOSITORIES_SUCCESS: 'fetchUserRepositoriesSuccess',\r\n  FETCH_USER_REPOSITORIES_ERROR: 'fetchUserRepositoriesError'\r\n};\r\n\r\n\r\nexport const fetchUserRepositories = (username) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES,\r\n    username\r\n  };\r\n};\r\n\r\nexport const fetchUserRepositoriesSuccess = (repositories) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS,\r\n    repositories\r\n  };\r\n};\r\n\r\nexport const fetchUserRepositoriesError = (error) => {\r\n  return {\r\n    type: REPO_ACTIONS.FETCH_USER_REPOSITORIES_ERROR,\r\n    error\r\n  };\r\n};","import {\r\n  fetchUserRepositories,\r\n  fetchUserRepositoriesSuccess,\r\n  fetchUserRepositoriesError\r\n} from './types';\r\n\r\nexport const getUserRepositories = (username) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRepositories(username));\r\n    fetch(`https://api.github.com/users/${username}/repos?type=all`)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(fetchUserRepositoriesSuccess(json)))\r\n      .catch(error => dispatch(fetchUserRepositoriesError(error)))\r\n  };\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\nimport HomePage from './HomePage';\r\nimport { getUserRepositories } from './../actions/repo-actions';\r\n\r\n\r\nconst state2Props = (state) => {\r\n  return {\r\n    repositories: state.data,\r\n    isFetching: state.ui.isFetching,\r\n    errorMessage: state.ui.errorMessage\r\n  };\r\n};\r\n\r\nconst dispatch2Props = (dispatch) => {\r\n  return {\r\n    getUserRepositories: (username) => {\r\n      dispatch(getUserRepositories(username));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state2Props, dispatch2Props)(HomePage);","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport HomePage from './components/provider';\r\nimport SearchBar from './components/SearchBar';\r\nimport RepoCard from './components/RepoCard';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route exact path='/search' component={SearchBar} />\r\n      <Route exact path='/repos' component={RepoCard} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { REPO_ACTIONS } from './../actions/types';\r\n\r\nconst uiState = {\r\n  isFetching: false,\r\n  errorMessage: ''\r\n};\r\n\r\nconst uiReducer = (ui = uiState, action) => {\r\n  switch(action.type) {\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES:\r\n      return {\r\n        ...ui,\r\n        isFetching: true\r\n      };\r\n\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS:\r\n      return {\r\n        isFetching: false\r\n      };\r\n\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_ERROR:\r\n      return {\r\n        isFetching: false,\r\n        errorMessage: action.error.message\r\n      }\r\n\r\n    default:\r\n      return ui;\r\n  }\r\n}\r\n\r\nexport default uiReducer;","import { REPO_ACTIONS } from './../actions/types';\r\n\r\nconst dataReducer = (data = [], action) => {\r\n  console.log(action);\r\n  switch(action.type) {\r\n    case REPO_ACTIONS.FETCH_USER_REPOSITORIES_SUCCESS:\r\n      return [\r\n        ...action.repositories\r\n          .sort((a, b) => b.stargazers_count - a.stargazers_count)\r\n          .filter((repo, index) => index < 10)\r\n      ];\r\n    default:\r\n      return data;\r\n  }\r\n}\r\n\r\nexport default dataReducer;","import { combineReducers } from 'redux';\r\nimport ui from './ui-reducer';\r\nimport data from './data-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  ui,\r\n  data\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}